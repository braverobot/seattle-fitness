{# # Group 26: Shi Qin & Brian Heartwood
# cs340 OSU Sprint 2023 - Group Project
# Description: This file contains the code for our customers page.
#
# Citations: A majority of this code was taken from the OSU CS340 bsg example
#   tutorial, as well as the notes from the bsg_db and modified #}
<!DOCTYPE html>
<html lang="en">
   <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Classes</title>
      <link rel="stylesheet" href="/static/css/styles.css">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
   </head>
   <body>
      <nav>
         <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/customers">Customers</a></li>
            <li><a href="/classes">Classes</a></li>
            <li><a href="/events">Events</a></li>
            <li><a href="/studios">Studios</a></li>
            <li><a href="/scheduled">Scheduled</a></li>
            <li><a href="/categories">Categories</a></li>
         </ul>
      </nav>
      <header>
         <h1>Classes</h1>
      </header>
      <main>
         <div class="content-box">
            <div id="browse" style="display: block">
               <p><strong>Browse Classes</strong></p>
               <table border="1" cellpadding="5">
                  <!-- Access data tuple passed from app.py --> 
                  {% if data %}
                  <thead>
                     <tr>
                        <th>Class ID</th>
                        <th>Date</th>
                        <th>Name</th>
                        <th>Size</th>
                        <th>Instructor</th>
                        <th>Experience Level</th>
                        <th>Studio Location</th>
                        <th></th>
                        <th></th>
                     </tr>
                  <tbody>
                     <!-- Now, iterate through every item in data -->
                     {% for item in data %}
                     <tr>
                        <!-- Then iterate through every key in the current item dictionary -->
                        <!-- Turns out we need to display NULL instead of None, so lets do that -->
                        {% for key in item.keys() %}
                        {% if item[key] is none %}
                        <td> NULL </td>
                        <!-- Create a <td> element with the value of that key in it -->
                        {% else %}
                        <td> {{item[key]}} </td>
                        {% endif %}
                        {% endfor %}
                        <!-- Create our edit/delete buttons -->
                        <td><a href="update_class/{{item.class_id}}" ><i class="fa fa-edit"></i></a></td>
                        <td><a href="delete_class/{{item.class_id}}" ><i class="fa fa-trash-alt"></i></a></td>
                     </tr>
                     {% endfor %} 
                     {% endif %} 
                     <tr>
               </table>
               <p>&nbsp;</p>
            </div>
            <div id="insert" style="display: block">
               <form id="addClass" action="/classes" method="post">
                  <legend><strong>Add Class</strong></legend>
                  <fieldset class="fields">
                     <label> Date </label>
                     <input type="datetime-local" name="date">
                     <label> Name </label> 
                     <input type="text" name="name" placeholder="Class Name" required>
                     <label> Size </label> 
                     <input type="text" name="size">
                     <label> Instructor </label> 
                     <input type="text" name="instructor">
                     <label> Experience Level </label>
                     <!--Add option dropdown for category-->
                     <select id="categories" name="categories" required>
                        <option selected value="">choose one</option>
                        {% for category in categories %}
                        <!-- In our case here he category_id is passed back, but the experience_level is displayed -->
                        <!-- This allows us to use category_id in our insert query, but display the experience_level to the user -->
                        <option value="{{ category.category_id }}">{{ category.experience_level }}</option>
                        {% endfor %}
                     </select>
                     <p></p>
                     <label> Studio Location </label> 
                     <!--Add option dropdown for studio-->
                     <select id="studio" name="studio" required>
                        <option selected value="">choose one</option>
                        {% for studio in studios %}
                        <!-- Same deal here... he studio_id is passed back, but the location is displayed -->
                        <option value="{{ studio.studio_id }}">{{ studio.location }}</option>
                        {% endfor %}
                     </select>
                  </fieldset>
                  <input class="btn" type="submit" id="addClass" value="Add Class">
                  <input class="btn" type="button" value="cancel" onclick="window.location.href='/classes'">
               </form>
            </div>
            <p>&nbsp;</p>
         </div>
      </main>
      <footer>
         @2023 Group 26, Shi Qin and Brian Heartwood
      </footer>
   </body>
</html>