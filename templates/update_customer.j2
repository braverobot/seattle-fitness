{# # Group 26: Shi Qin & Brian Heartwood
# cs340 OSU Sprint 2023 - Group Project
# Description: This file contains the code for our customers page.
#
# Citations: A majority of this code was taken from the OSU CS340 bsg example
#   tutorial, as well as the notes from the bsg_db and modified #}
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Update Customer</title>
      <link rel="stylesheet" href="/static/css/styles.css">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    </head>
    <body>
      <nav>
        <ul>
          <li><a href="/">Home</a></li>
          <li><a href="customers">Customers</a></li>
          <li><a href="classes">Classes</a></li>
          <li><a href="events">Events</a></li>
          <li><a href="studios">Studios</a></li>
          <li><a href="scheduled">Scheduled</a></li>
          <li><a href="categories">Categories</a></li>
        </ul>
      </nav>
      <header>
        <h1>Update Customer</h1>
      </header>
      <main>
        <div class="content-box">
        <div id="browse" style="display: block">
        <table border="1" cellpadding="5">
          {% if data %}
          <thead>
            <tr align="left">
              <th>Customer ID</th>
              <th>Name</th>
              <th>Phone</th>
              <th>Address</th>
              <th></th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            <!-- Essentially what we are 
              doing here is iterating through every item in our data tuple, 
              then iterating through every key in the current item dictionary,
              and then creating a <td> element with the value of that key in it. -->
            {% for item in data %}
            <tr align="left">
              {% for key in item.keys() %}                            
              <td>{{item[key]}}</td>
              {% endfor %} 
            </tr>
            {% endfor %}
          </tbody>
          {% endif %}
        </table>
        <div id="update">
          <form id="updateCustomer" action="/update_customer/{{data[0].customer_id}}" method="post">
            <legend><strong>Edit Customer</strong></legend>
            <fieldset>
              <!-- We can preset form inputs to match attributes currently stored for 'customer_id' of customer to be updated via value= and accessing our passed data tuple -->
              <!-- Create hidden form input to store the passed 'customer_id' of the customer we are editing so we can access it easily in our 'POST' method in our app.py -->
              <input type="hidden" value="{{data[0].id}}" id="customer_id" name="customer_id" required>
              <label for="name"> Name </label>
              <input type="text" value="{{data[0].name}}" id="name" name="name" pattern="^[A-Za-z]{2,}\s[A-Za-z]{2,}$" required>
              <label for="phone_number"> Phone Number </label>
              <input type="text" value="{{data[0].phone_number}}"  id="phone_number" name="phone_number">
              <label for="address"> Address </label>
              <input type="text" value="{{data[0].address}}"  id="address" name="address">
              </select>	
            </fieldset>
            <br>
            <input type="submit" value="Update Customer" id="updateCustomer" class="btn">
            <!-- NOTE (Brian): I had to use onclick here because using an href a link caused the buttons to look slightly off -->
            <input class="btn" type="button" value="cancel" onclick="window.location.href='/customers'">
          </form>
        </div>
      </main>
    </body>
  </html>